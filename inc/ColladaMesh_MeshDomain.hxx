// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _ColladaMesh_MeshDomain_HeaderFile
#define _ColladaMesh_MeshDomain_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_DefineHandle_HeaderFile
#include <Standard_DefineHandle.hxx>
#endif
#ifndef _Handle_ColladaMesh_MeshDomain_HeaderFile
#include <Handle_ColladaMesh_MeshDomain.hxx>
#endif

#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _TColgp_SequenceOfXYZ_HeaderFile
#include <TColgp_SequenceOfXYZ.hxx>
#endif
#ifndef _TColgp_SequenceOfVec_HeaderFile
#include <TColgp_SequenceOfVec.hxx>
#endif
#ifndef _ColladaMesh_SequenceOfMeshTriangle_HeaderFile
#include <ColladaMesh_SequenceOfMeshTriangle.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class Standard_NegativeValue;
class Standard_NullValue;
class ColladaMesh_SequenceOfMeshTriangle;
class TColgp_SequenceOfXYZ;
class TColgp_SequenceOfVec;

//! A  mesh domain is  a set of triangles defined with <br>
//!          three geometric vertices. The  mesh domain has its <br>
//!          own deflection. <br>
//! <br>
class ColladaMesh_MeshDomain : public MMgt_TShared {

public:

  //! The mesh deflection is defaulted to Confusion from <br>
//!          package Precision. <br>
  Standard_EXPORT   ColladaMesh_MeshDomain();
  //! Raised if the deflection is lower than zero <br>//! Raised if the deflection  is lower than  Confusion <br>
//!          from package Precision <br>
  Standard_EXPORT   ColladaMesh_MeshDomain(const Standard_Real Deflection);
  //! Build a triangle with the triplet of vertices (V1, <br>
//!          V2, V3).  This triplet defines  the indexes of the <br>
//!          vertex in the  current domain The coordinates  Xn, <br>
//!          Yn,  Zn  defines   the normal  direction   to  the <br>
//!          triangle.  Returns  the  range of  the triangle in <br>
//!          the current domain. <br>
  Standard_EXPORT   virtual  Standard_Integer AddTriangle(const Standard_Integer V1,const Standard_Integer V2,const Standard_Integer V3,const Standard_Real n1x,const Standard_Real n1y,const Standard_Real n1z,const Standard_Real n2x,const Standard_Real n2y,const Standard_Real n2z,const Standard_Real n3x,const Standard_Real n3y,const Standard_Real n3z) ;
  //! Returns the range of the vertex in the current <br>
//!          domain. <br>
  Standard_EXPORT   virtual  Standard_Integer AddVertex(const Standard_Real X,const Standard_Real Y,const Standard_Real Z) ;

  //! Returns  the range of   the vertex in  the current <br>
//!          domain.  The current vertex is not inserted in the <br>
//!          mesh if it already exist. <br>
  Standard_EXPORT   virtual  Standard_Integer AddOnlyNewVertex(const Standard_Real X,const Standard_Real Y,const Standard_Real Z,Standard_Boolean& IsNew) ;
  
      virtual  Standard_Real Deflection() const;
  //! Number of triangles in the mesh. <br>
      virtual  Standard_Integer NbTriangles() const;
  //! Number of vertices in the mesh. <br>
      virtual  Standard_Integer NbVertices() const;
  //! Returns the set of triangles of the  current mesh domain <br>
      virtual const ColladaMesh_SequenceOfMeshTriangle& Triangles() const;
  //! Returns  the coordinates   of the  vertices of the <br>
//!          mesh domain   of range <DomainIndex>.   {XV1, YV1, <br>
//!          ZV1, XV2, YV2, ZV2, XV3,.....} <br>
      virtual const TColgp_SequenceOfXYZ& Vertices() const;




  DEFINE_STANDARD_RTTI(ColladaMesh_MeshDomain)

protected:




private: 


Standard_Real deflection;
Standard_Integer nbVertices;
Standard_Integer nbTriangles;
TColgp_SequenceOfXYZ vertexCoords;
TColgp_SequenceOfVec normalCoords;
ColladaMesh_SequenceOfMeshTriangle trianglesVertex;


};


#include <ColladaMesh_MeshDomain.lxx>



// other Inline functions and methods (like "C++: function call" methods)


#endif
